version: "2.3"

networks:
  test:
    driver: bridge

volumes:
  mongo:
    driver: local

services:
  config:
    image: curlimages/curl:7.76.0
    container_name: c-config
    command: ["/elasticsearch/configure.sh"]
    working_dir: /elasticsearch
    volumes:
      - ./elasticsearch:/elasticsearch
    depends_on:
      es7:
        condition: service_healthy
    networks:
      - test
    healthcheck:
      test: "[ -f /home/curl_user/health.check ] && exit 0 || exit 1"
      interval: 2s
      timeout: 30s
      retries: 300
    restart: unless-stopped

  monstache:
    image: rwynn/monstache:6.7.2
    container_name: c-monstache
    working_dir: /app
    command: -f ./monstache.config.toml
    volumes:
      - ./monstache.config.toml:/app/monstache.config.toml
      - ./plugin/plugin.so:/app/plugin.so
    depends_on:
      es7:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - test
    healthcheck:
      test: "wget -q -O - http://localhost:8080/healthz"
      interval: 10s
      timeout: 30s
      retries: 300
    restart: unless-stopped

  es7:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: c-es
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - test
    healthcheck:
      test: "curl --fail http://localhost:9200 || exit 1"
      interval: 2s
      timeout: 60s
      retries: 300
    restart: unless-stopped

  mongo:
    image: mongo:4.2
    container_name: mongo
    command: ["mongod", "--auth", "--replSet", "rs1"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "password"
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db
    restart: always
    networks:
      - test

  mongo-setup:
    image: mongo:4.2
    container_name: mongo-setup
    environment:
      - MONGO1=mongo
      - RS=rs1
      - USER=root
      - PASSWORD=password
    depends_on:
      - mongo
    volumes:
      - ./mongodb/scripts/setup.sh:/scripts/setup.sh
      - ./mongodb/scripts/data/crimes.csv:/scripts/data/crimes.csv
    entrypoint: ["/scripts/setup.sh"]
    networks:
      - test

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8091:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    restart: always